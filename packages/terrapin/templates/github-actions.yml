# Sui dApp E2E Testing with Playwright
# Generated by @tortoiseos/terrapin
#
# This workflow runs E2E tests for Sui blockchain dApps
# Copy this file to .github/workflows/e2e.yml in your repository

name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  # Allow manual trigger
  workflow_dispatch:

# Cancel in-progress runs for same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        # Test on multiple browsers
        browser: [chromium]
        # Add firefox, webkit if needed
        # browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun (recommended)
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Alternative: Use Node.js + npm instead
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      #     cache: 'npm'

      - name: Install dependencies
        run: bun install
        # For npm: npm ci

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps ${{ matrix.browser }}
        # For npm: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Install Sui CLI
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          cargo install --locked --git https://github.com/MystenLabs/sui.git --branch main sui

      - name: Start Sui localnet
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          sui start &
          sleep 10
          # Verify localnet is running
          sui client --help || echo "Sui client ready"

      - name: Build application
        run: bun run build
        # For npm: npm run build

      - name: Run E2E tests
        run: bun run test:e2e --project=${{ matrix.browser }}
        # For npm: npm run test:e2e -- --project=${{ matrix.browser }}
        env:
          # Enable burner wallet for tests
          NEXT_PUBLIC_ENABLE_BURNER_WALLET: 'true'
          NEXT_PUBLIC_SUI_NETWORK: 'localnet'
          # CI environment
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.browser }}-${{ github.run_id }}
          path: |
            test-results/**/*.png
            test-results/**/*.webm
          retention-days: 7

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: daun/playwright-report-comment@v3
        with:
          report-path: playwright-report

  # Optional: Deploy test report to GitHub Pages
  publish-report:
    name: Publish Test Report
    if: always()
    needs: test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-reports/playwright-report-chromium

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Run tests on schedule (nightly)
  # schedule-test:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'schedule'
  #   steps:
  #     - uses: actions/checkout@v4
  #     # ... same steps as above ...
